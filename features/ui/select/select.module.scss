@use "@styles/color";
@use "@styles/font";
@use "@styles/space";
@use "@styles/shadow";

.select {
  display: flex;
  flex-direction: column;
  gap: 0.375rem;
}

.label {
  color: color.$gray-700;
  font: font.$text-sm-medium;
}

.hint {
  font: font.$text-sm-medium;
  color: color.$gray-500;
}

.errorMessage {
  font: font.$text-sm-regular;
  color: color.$error-500;
}

// To apply CSS resets, use composes from button class.
.button {
  composes: button from "../button/button.module.scss";
  height: 2.75rem;
  display: flex;
  align-items: center;
  padding: 0.625rem 0.875rem;
  gap: 0.5rem;
  border-radius: space.$s2;
  border: 1px solid color.$gray-300;
  background: color.$white;
  box-shadow: shadow.$xs;
  color: color.$gray-900;
  font: font.$text-md-regular;

  // & [data-placeholder="true"] {
  //   color: color.$gray-500;
  // }

  [data-placeholder="true"] {
    color: color.$gray-500;
  }

  // data-pressed variable set by React Aria
  &[data-pressed="true"]:not(:disabled),
  &:focus-visible {
    border-color: color.$primary-300;
    box-shadow: shadow.$focus-primary;
    outline: none;
  }

  &.error {
    border-color: color.$error-300;
  }

  &.error[data-pressed="true"]:not(:disabled),
  &.error:focus-visible {
    border-color: color.$error-300;
    box-shadow: shadow.$focus-error;
  }

  &:disabled {
    border-color: color.$gray-300;
    background: color.$gray-50;
    color: color.$gray-500;
  }
}

.icon {
  height: 1.25rem;
}

.arrowIcon {
  color: color.$gray-500;
}

.value {
  flex: 1;
  text-align: left;
}

// Popover uses variable set by React Aria. This way dropdown has the same
// width as the select element.
.popover {
  width: var(--trigger-width);
}

.optionList {
  border-radius: space.$s2;
  background: color.$white;
  box-shadow: shadow.$lg;
  outline: none;
}

.option {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.625rem 0.875rem;
  gap: space.$s2;
  color: color.$gray-900;
  cursor: default;

  &[data-selected="true"],
  &:focus-visible {
    background: color.$primary-25;
    outline: none;
  }

  &.selected svg {
    color: color.$primary-600;
  }
}
